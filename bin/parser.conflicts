
** Conflict (shift/reduce) in state 342.
** Tokens involved: MINUSDOT MINUS
** The following explanations concentrate on token MINUSDOT.
** This state is reached from top after reading:

expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

top 
(?)

** In state 342, looking ahead at MINUSDOT, reducing production
** def -> expr
** is permitted because of the following sub-derivation:

def top // lookahead token appears because top can begin with MINUSDOT
expr . 

** In state 342, looking ahead at MINUSDOT, shifting is permitted
** because of the following sub-derivation:

def top 
expr 
expr . MINUSDOT expr 

** Conflict (shift/reduce) in state 160.
** Tokens involved: UID STRING LPAREN LID LBRACK LBRACE INT FLOAT CHAR BOOL BEGIN
** The following explanations concentrate on token UID.
** This state is reached from top after reading:

simple_expr_ simple_expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

top 
(?)

** In state 160, looking ahead at UID, reducing production
** nonempty_list(simple_expr) -> simple_expr
** is permitted because of the following sub-derivation:

def top // lookahead token appears because top can begin with UID
expr // lookahead token is inherited
simple_expr_ nonempty_list(simple_expr) // lookahead token is inherited
             simple_expr . 

** In state 160, looking ahead at UID, shifting is permitted
** because of the following sub-derivation:

def top 
expr 
simple_expr_ nonempty_list(simple_expr) 
             simple_expr nonempty_list(simple_expr) 
                         simple_expr 
                         . UID 

** Conflict (shift/reduce) in state 158.
** Tokens involved: UID STRING LPAREN LID LBRACK LBRACE INT FLOAT CHAR BOOL BEGIN
** The following explanations concentrate on token UID.
** This state is reached from top after reading:

simple_expr_

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

top 
(?)

** In state 158, looking ahead at UID, shifting is permitted
** because of the following sub-derivation:

def top 
expr 
simple_expr_ nonempty_list(simple_expr) 
             simple_expr 
             . UID 

** In state 158, looking ahead at UID, reducing production
** simple_expr -> simple_expr_
** is permitted because of the following sub-derivation:

def top // lookahead token appears because top can begin with UID
expr // lookahead token is inherited
simple_expr // lookahead token is inherited
simple_expr_ . 

** Conflict (shift/reduce) in state 119.
** Token involved: LID
** This state is reached from top after reading:

TYPE params tyname EQ simple_ty STAR simple_ty

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

top 
(?)

** In state 119, looking ahead at LID, shifting is permitted
** because of the following sub-derivation:

def top 
TYPE separated_nonempty_list(AND,ty_def) 
     ty_def 
     params tyname EQ ty 
                      tuple_ty 
                      simple_ty STAR separated_nonempty_list(STAR,simple_ty) 
                                     simple_ty 
                                     simple_ty tyname 
                                               lid 
                                               . LID 

** In state 119, looking ahead at LID, reducing production
** separated_nonempty_list(STAR,simple_ty) -> simple_ty
** is permitted because of the following sub-derivation:

def top // lookahead token appears because top can begin with LID
TYPE separated_nonempty_list(AND,ty_def) // lookahead token is inherited
     ty_def // lookahead token is inherited
     params tyname EQ ty // lookahead token is inherited
                      tuple_ty // lookahead token is inherited
                      simple_ty STAR separated_nonempty_list(STAR,simple_ty) // lookahead token is inherited
                                     simple_ty . 

** Conflict (shift/reduce) in state 117.
** Token involved: LID
** This state is reached from top after reading:

TYPE params tyname EQ simple_ty

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

top 
(?)

** In state 117, looking ahead at LID, shifting is permitted
** because of the following sub-derivation:

def top 
TYPE separated_nonempty_list(AND,ty_def) 
     ty_def 
     params tyname EQ ty 
                      simple_ty 
                      simple_ty tyname 
                                lid 
                                . LID 

** In state 117, looking ahead at LID, reducing production
** ty -> simple_ty
** is permitted because of the following sub-derivation:

def top // lookahead token appears because top can begin with LID
TYPE separated_nonempty_list(AND,ty_def) // lookahead token is inherited
     ty_def // lookahead token is inherited
     params tyname EQ ty // lookahead token is inherited
                      simple_ty . 

** Conflict (shift/reduce) in state 1.
** Tokens involved: UID STRING LPAREN LID LBRACK LBRACE INT FLOAT CHAR BOOL BEGIN
** The following explanations concentrate on token UID.
** This state is reached from top after reading:

UID

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

top 
(?)

** In state 1, looking ahead at UID, shifting is permitted
** because of the following sub-derivation:

def top 
expr 
UID simple_expr 
    . UID 

** In state 1, looking ahead at UID, reducing production
** simple_expr -> UID
** is permitted because of the following sub-derivation:

def top // lookahead token appears because top can begin with UID
expr // lookahead token is inherited
simple_expr // lookahead token is inherited
UID . 
